{
	"name": "JOIN_NOMINA",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DATALAKE_NOMINA_MENSUAL",
						"type": "DatasetReference"
					},
					"name": "SOURCENOMINA"
				},
				{
					"dataset": {
						"referenceName": "DS_DATALAKE_CCR_TIME_TRACKER",
						"type": "DatasetReference"
					},
					"name": "SOURCECCR"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_NOMINA_PERSONAL",
						"type": "DatasetReference"
					},
					"name": "NOMINAPERSONAL"
				},
				{
					"dataset": {
						"referenceName": "DS_NOMINA_PROYECTO",
						"type": "DatasetReference"
					},
					"name": "NOMINAPROYECTO"
				}
			],
			"transformations": [
				{
					"name": "JNNOMINAXCCR"
				},
				{
					"name": "CALCULARSUELDO"
				},
				{
					"name": "CALCULARNOMINAPROYECTO"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Empresa as string,",
				"          {Nombre Empleado} as string,",
				"          {User Name} as string,",
				"          Iniciales as string,",
				"          {Número Identificación} as long,",
				"          {Tipo Identificacion} as string,",
				"          Edad as short,",
				"          Genero as string,",
				"          {Tipo Contrato} as string,",
				"          {Número Contrato} as short,",
				"          Cargo as string,",
				"          {Fecha Ingreso} as date,",
				"          {Fecha Inicio Contrato} as date,",
				"          {Fecha Terminación Contrato} as string,",
				"          {COE Usuario} as string,",
				"          {COE Descripción} as string,",
				"          {Vp Regional} as string,",
				"          {Ciudad Trabajo} as string,",
				"          {Nivel Organizacional} as string,",
				"          Seniority as string,",
				"          {Tipo de remuneración} as string,",
				"          {Salario Básico} as string,",
				"          {Auxilio de Transporte} as string,",
				"          {Subsidio Transporte} as string,",
				"          {Bonos Sodexo} as integer,",
				"          {Auxilio de Vivienda} as short,",
				"          {Total Remuneración} as integer,",
				"          CTC as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SOURCENOMINA",
				"source(output(",
				"          {S/N} as short,",
				"          OPR as string,",
				"          DM as string,",
				"          PMO as string,",
				"          Iniciales as string,",
				"          Cedula as string,",
				"          {Nombre Usuario} as string,",
				"          {Centro Costo} as string,",
				"          Proyecto as string,",
				"          {Descripción  Proyecto} as string,",
				"          {Utilización} as integer,",
				"          {Días Trabajados} as string,",
				"          {CH/NCH} as string,",
				"          {DIM1: Proyecto} as string,",
				"          {DIM2: Centro de Costo} as string,",
				"          {DIM3: Codigo  -LineaNegocio} as string,",
				"          {DIM4: Codigo - Cliente} as string,",
				"          {DIM5: Codigo - Pais} as string,",
				"          {DIM6: Producto} as string,",
				"          {Budgeting Model} as string,",
				"          {Metodología} as string,",
				"          {Línea Tecnológica} as string,",
				"          Cloud as string,",
				"          {Tipo de Mercado} as string,",
				"          {Capacidades Requeridas} as string,",
				"          {Compañia} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SOURCECCR",
				"SOURCENOMINA, SOURCECCR join(SOURCENOMINA@Iniciales == SOURCECCR@Iniciales,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JNNOMINAXCCR",
				"JNNOMINAXCCR derive(SUELDO_CALCULADO = (CTC*{Utilización})/100) ~> CALCULARSUELDO",
				"CALCULARSUELDO aggregate(groupBy(Proyecto),",
				"     NOMINA = sum(SUELDO_CALCULADO)) ~> CALCULARNOMINAPROYECTO",
				"CALCULARSUELDO sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Nomina_Personal'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> NOMINAPERSONAL",
				"CALCULARNOMINAPROYECTO sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Nomina_Proyecto'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> NOMINAPROYECTO"
			]
		}
	}
}